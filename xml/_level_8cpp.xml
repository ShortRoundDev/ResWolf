<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_level_8cpp" kind="file" language="C++">
    <compoundname>Level.cpp</compoundname>
    <includes refid="_level_8h" local="yes">Level.h</includes>
    <includes local="no">iostream</includes>
    <includes refid="_file_handling_8h" local="yes">FileHandling.h</includes>
    <includes refid="_logging_8h" local="yes">Logging.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="_wall_8h" local="yes">Wall.h</includes>
    <includes refid="_graphics_manager_8h" local="yes">GraphicsManager.h</includes>
    <includes refid="_game_manager_8h" local="yes">GameManager.h</includes>
    <includes refid="_u_i_manager_8h" local="yes">UIManager.h</includes>
    <includes refid="_entity_def_8h" local="yes">EntityDef.h</includes>
    <incdepgraph>
      <node id="27">
        <label>functional</label>
      </node>
      <node id="6">
        <label>windows.h</label>
      </node>
      <node id="13">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="20">
        <label>Windows.h</label>
      </node>
      <node id="5">
        <label>Shader.h</label>
        <link refid="_shader_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Logging.h</label>
        <link refid="_logging_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="24">
        <label>map</label>
      </node>
      <node id="21">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="16">
        <label>FileHandling.h</label>
        <link refid="_file_handling_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>EntityDef.h</label>
        <link refid="_entity_def_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Texture.h</label>
        <link refid="_texture_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Level.cpp</label>
        <link refid="_level_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Model.h</label>
        <link refid="_model_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>GraphicsManager.h</label>
        <link refid="_graphics_manager_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>math.h</label>
      </node>
      <node id="23">
        <label>Camera.h</label>
        <link refid="_camera_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>GameManager.h</label>
        <link refid="_game_manager_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>Wall.h</label>
        <link refid="_wall_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Entity.h</label>
        <link refid="_entity_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>UIManager.h</label>
        <link refid="_u_i_manager_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>glad/glad.h</label>
      </node>
      <node id="9">
        <label>LevelTokens.h</label>
        <link refid="_level_tokens_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Level.h</label>
        <link refid="_level_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>GL/gl.h</label>
      </node>
      <node id="25">
        <label>memory</label>
      </node>
      <node id="8">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_level_8cpp_1a525335710b53cb064ca56b936120431e" prot="public" static="no">
        <name>_USE_MATH_DEFINES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Level.cpp" line="8" column="9" bodyfile="Level.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Level.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FileHandling.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Logging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Wall.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GraphicsManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GameManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;UIManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EntityDef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">ResWolf;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="class_res_wolf_1_1_shader" kindref="compound">Shader</ref>*<sp/><ref refid="class_res_wolf_1_1_level_1ac83c1eb77c40ebb6d0e297ddf87eac41" kindref="member">Level::wallShader</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="class_res_wolf_1_1_shader" kindref="compound">Shader</ref>*<sp/><ref refid="class_res_wolf_1_1_level_1ae5a4078e2e94e7c8834cfd53359c8b2b" kindref="member">Level::entityShader</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_res_wolf_1_1_level_1a1b7d0b4f509a9300a494247aae75181a" kindref="member">Level::init</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_wall_1a66375124438a8e33b6b5561f2924f40a" kindref="member">Wall::init</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ac83c1eb77c40ebb6d0e297ddf87eac41" kindref="member">wallShader</ref><sp/>=<sp/>GRAPHICS-&gt;shaders[</highlight><highlight class="stringliteral">&quot;wall&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::init();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ae5a4078e2e94e7c8834cfd53359c8b2b" kindref="member">entityShader</ref><sp/>=<sp/>GRAPHICS-&gt;shaders[</highlight><highlight class="stringliteral">&quot;entity&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="class_res_wolf_1_1_level_1ae5223ab9cf97336416297cca5bb2d85d" kindref="member">Level::Level</ref>(std::string<sp/>path)<sp/>:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>levelToken(NULL),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>width(0),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>height(0),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>totalEntities(0),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>entities(NULL),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>walls(NULL)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>levelSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>ReadBinaryFile(path,<sp/>&amp;data,<sp/>&amp;levelSize);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>LevelStatus::FAILED_FNF;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SimpleError(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>load<sp/>level<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;.\nGot<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(err));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>levelToken<sp/>=<sp/>(<ref refid="struct_res_wolf_1_1___level_token" kindref="compound">LevelToken</ref>*)data;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fixPointers(levelToken))</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>width<sp/>=<sp/>levelToken-&gt;width;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>height<sp/>=<sp/>levelToken-&gt;height;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>totalEntities<sp/>=<sp/>levelToken-&gt;totalEntities;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>parseLevelToken();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>LevelStatus::OK;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">Level::~Level()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(levelToken<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(levelToken);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelToken<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_res_wolf_1_1_level_1a981c7402c950e7bdde617386fef43f00" kindref="member">walls</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="class_res_wolf_1_1_level_1a981c7402c950e7bdde617386fef43f00" kindref="member">walls</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1a981c7402c950e7bdde617386fef43f00" kindref="member">walls</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_res_wolf_1_1_level_1a9b7478818e1aa80d3d4d059fa5faf9bf" kindref="member">Level::draw</ref>()</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>progress<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO,<sp/>change<sp/>this<sp/>to<sp/>(visible)<sp/>area<sp/>around<sp/>player</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_res_wolf_1_1_level_1ae18e9382f9bf305c7577093a7a5d8447" kindref="member">width</ref><sp/>&lt;=<sp/>0<sp/>||<sp/>height<sp/>&lt;=<sp/>0<sp/>||<sp/><ref refid="class_res_wolf_1_1_level_1a981c7402c950e7bdde617386fef43f00" kindref="member">walls</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ac83c1eb77c40ebb6d0e297ddf87eac41" kindref="member">wallShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a870fa9f13d69e558815d6fd351a469dc" kindref="member">use</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lightPos<sp/>=<sp/>glm::vec3(3.0f<sp/>+<sp/>cos(progress)<sp/>*<sp/>0.5f,<sp/>0.5f,<sp/>3.0f<sp/>+<sp/>sin(progress)<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ac83c1eb77c40ebb6d0e297ddf87eac41" kindref="member">wallShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a9cac95f8d3370bdd09ba5894ebc134c3" kindref="member">setVec3</ref>(</highlight><highlight class="stringliteral">&quot;lightPos&quot;</highlight><highlight class="normal">,<sp/>lightPos);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ac83c1eb77c40ebb6d0e297ddf87eac41" kindref="member">wallShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a9cac95f8d3370bdd09ba5894ebc134c3" kindref="member">setVec3</ref>(</highlight><highlight class="stringliteral">&quot;lightColor&quot;</highlight><highlight class="normal">,<sp/>glm::vec3(cos(progress),<sp/>sin(progress),<sp/>cos(progress<sp/>+<sp/>M_PI<sp/>/<sp/>6)));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ac83c1eb77c40ebb6d0e297ddf87eac41" kindref="member">wallShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a8b28dfb7729efbca36d6859f0eb850c3" kindref="member">setMat4</ref>(</highlight><highlight class="stringliteral">&quot;view&quot;</highlight><highlight class="normal">,<sp/>GRAPHICS-&gt;camera-&gt;view);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ac83c1eb77c40ebb6d0e297ddf87eac41" kindref="member">wallShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a8b28dfb7729efbca36d6859f0eb850c3" kindref="member">setMat4</ref>(</highlight><highlight class="stringliteral">&quot;projection&quot;</highlight><highlight class="normal">,<sp/>GRAPHICS-&gt;camera-&gt;projection);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ac83c1eb77c40ebb6d0e297ddf87eac41" kindref="member">wallShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a9cac95f8d3370bdd09ba5894ebc134c3" kindref="member">setVec3</ref>(</highlight><highlight class="stringliteral">&quot;playerPos&quot;</highlight><highlight class="normal">,<sp/>GRAPHICS-&gt;camera-&gt;cameraPos);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ac83c1eb77c40ebb6d0e297ddf87eac41" kindref="member">wallShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a9cac95f8d3370bdd09ba5894ebc134c3" kindref="member">setVec3</ref>(</highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>glm::vec3(1.0f));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>y++)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="class_res_wolf_1_1_level_1ae18e9382f9bf305c7577093a7a5d8447" kindref="member">width</ref>;<sp/>x++)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1a6f39e4e3b1228299dbd635b2c4ddb5d5" kindref="member">wallAt</ref>(x,<sp/>y)-&gt;<ref refid="class_res_wolf_1_1_wall_1a306b3cb84f9f596892eeb80b71c98fb5" kindref="member">draw</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>progress<sp/>+=<sp/>0.03f;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ae5a4078e2e94e7c8834cfd53359c8b2b" kindref="member">entityShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a870fa9f13d69e558815d6fd351a469dc" kindref="member">use</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ae5a4078e2e94e7c8834cfd53359c8b2b" kindref="member">entityShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1abcb2ccc2202939d6e08af46fb6ea9745" kindref="member">setModel</ref>(Entity::rect);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ae5a4078e2e94e7c8834cfd53359c8b2b" kindref="member">entityShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a8b28dfb7729efbca36d6859f0eb850c3" kindref="member">setMat4</ref>(</highlight><highlight class="stringliteral">&quot;view&quot;</highlight><highlight class="normal">,<sp/>GRAPHICS-&gt;camera-&gt;view);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ae5a4078e2e94e7c8834cfd53359c8b2b" kindref="member">entityShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a8b28dfb7729efbca36d6859f0eb850c3" kindref="member">setMat4</ref>(</highlight><highlight class="stringliteral">&quot;projection&quot;</highlight><highlight class="normal">,<sp/>GRAPHICS-&gt;camera-&gt;projection);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ae5a4078e2e94e7c8834cfd53359c8b2b" kindref="member">entityShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a9cac95f8d3370bdd09ba5894ebc134c3" kindref="member">setVec3</ref>(</highlight><highlight class="stringliteral">&quot;playerPos&quot;</highlight><highlight class="normal">,<sp/>GRAPHICS-&gt;camera-&gt;cameraPos);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ae5a4078e2e94e7c8834cfd53359c8b2b" kindref="member">entityShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a8e71a5e3966ac92dd326167169d8d18a" kindref="member">setVec2</ref>(</highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>glm::vec2(1.0f));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1ae5a4078e2e94e7c8834cfd53359c8b2b" kindref="member">entityShader</ref>-&gt;<ref refid="class_res_wolf_1_1_shader_1a9cac95f8d3370bdd09ba5894ebc134c3" kindref="member">setVec3</ref>(</highlight><highlight class="stringliteral">&quot;lightPos&quot;</highlight><highlight class="normal">,<sp/>lightPos);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_res_wolf_1_1_level_1aa4d7025695de3d029b9ae12a70d0be33" kindref="member">totalEntities</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entities[i]-&gt;draw();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glPolygonMode(GL_FRONT_AND_BACK,<sp/>GL_LINE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>UI_MGR-&gt;drawText(</highlight><highlight class="stringliteral">&quot;CameraPos:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>vec3ToString(GRAPHICS-&gt;camera-&gt;cameraPos),<sp/>16,<sp/>64,<sp/>128,<sp/>128);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>Private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Level::fixPointers(<ref refid="struct_res_wolf_1_1___level_token" kindref="compound">LevelToken</ref>*<sp/>levelToken)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1a73270119d84d54379a68bae295e2b07a" kindref="member">walls</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SimpleError(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>level<sp/>header.<sp/>Walls<sp/>==<sp/>NULL!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1a067c4f412449878e981163db9b526dab" kindref="member">status</ref><sp/>=<sp/>LevelStatus::FAILED_CORRUPT;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>offset<sp/>=<sp/>(uint64_t)levelToken;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1a73270119d84d54379a68bae295e2b07a" kindref="member">walls</ref><sp/>=<sp/>(<ref refid="struct_res_wolf_1_1___wall_token" kindref="compound">WallToken</ref>*)(((uint8_t*)levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1a73270119d84d54379a68bae295e2b07a" kindref="member">walls</ref>)<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1a88ef8d4cb32a9c05093a58be3b66867c" kindref="member">height</ref>;<sp/>y++)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1af003fc1c9bf4d2169bd8d67fc7b603f0" kindref="member">width</ref>;<sp/>x++)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>x<sp/>+<sp/>(y<sp/>*<sp/>levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1af003fc1c9bf4d2169bd8d67fc7b603f0" kindref="member">width</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1a73270119d84d54379a68bae295e2b07a" kindref="member">walls</ref>[idx].<ref refid="struct_res_wolf_1_1___wall_token_1a3c532e48e75dd953c44750ed82ef3e8c" kindref="member">message</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1a73270119d84d54379a68bae295e2b07a" kindref="member">walls</ref>[idx].<ref refid="struct_res_wolf_1_1___wall_token_1a3c532e48e75dd953c44750ed82ef3e8c" kindref="member">message</ref><sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1a8c3dd2469ba4d5785e6283666f44c576" kindref="member">totalEntities</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>technically<sp/>a<sp/>level<sp/>doesn&apos;t<sp/>need<sp/>entities.<sp/>Boring<sp/>level<sp/>though</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1af72e4b079e3776d0b3d1f0d61eb34794" kindref="member">entities</ref><sp/>=<sp/>(<ref refid="struct_res_wolf_1_1___entity_token" kindref="compound">EntityToken</ref>*)(((uint8_t*)levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1af72e4b079e3776d0b3d1f0d61eb34794" kindref="member">entities</ref>)<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1a8c3dd2469ba4d5785e6283666f44c576" kindref="member">totalEntities</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1af72e4b079e3776d0b3d1f0d61eb34794" kindref="member">entities</ref>[i].<ref refid="struct_res_wolf_1_1___entity_token_1acad555f3e9630e3defff5015b291861e" kindref="member">config</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1af72e4b079e3776d0b3d1f0d61eb34794" kindref="member">entities</ref>[i].<ref refid="struct_res_wolf_1_1___entity_token_1acad555f3e9630e3defff5015b291861e" kindref="member">config</ref><sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Level::parseLevelToken()</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-----<sp/>Walls<sp/>-----<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1a981c7402c950e7bdde617386fef43f00" kindref="member">walls</ref><sp/>=<sp/>(<ref refid="class_res_wolf_1_1_wall" kindref="compound">Wall</ref>*)calloc(height<sp/>*<sp/><ref refid="class_res_wolf_1_1_level_1ae18e9382f9bf305c7577093a7a5d8447" kindref="member">width</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_res_wolf_1_1_wall" kindref="compound">Wall</ref>));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_res_wolf_1_1_level_1a981c7402c950e7bdde617386fef43f00" kindref="member">walls</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1a067c4f412449878e981163db9b526dab" kindref="member">status</ref><sp/>=<sp/>LevelStatus::FAILED_MEM;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_res_wolf_1_1___wall_token" kindref="compound">WallToken</ref>*<sp/>wallToken<sp/>=<sp/>levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1a73270119d84d54379a68bae295e2b07a" kindref="member">walls</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>y++)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="class_res_wolf_1_1_level_1ae18e9382f9bf305c7577093a7a5d8447" kindref="member">width</ref>;<sp/>x++,<sp/>wallToken++)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_res_wolf_1_1_level_1a6f39e4e3b1228299dbd635b2c4ddb5d5" kindref="member">wallAt</ref>(x,<sp/>y)<sp/>=<sp/><ref refid="class_res_wolf_1_1_wall" kindref="compound">Wall</ref>(</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wallToken-&gt;<ref refid="struct_res_wolf_1_1___wall_token_1ad24f1ce3cb11674d66006d7f9873a3db" kindref="member">floor</ref>,<sp/>wallToken-&gt;<ref refid="struct_res_wolf_1_1___wall_token_1a9fe5b5a224f8ab1df3eed9e2c822ad8f" kindref="member">wallType</ref>,<sp/>wallToken-&gt;<ref refid="struct_res_wolf_1_1___wall_token_1a8bfda40b0551610dcf6bd001d70d28c5" kindref="member">ceiling</ref>,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wallToken-&gt;<ref refid="struct_res_wolf_1_1___wall_token_1a6c4bd7bf3ad8ae316fbc4f7c0b8c6109" kindref="member">isDoor</ref>,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wallToken-&gt;<ref refid="struct_res_wolf_1_1___wall_token_1a4490f09fdb0f0c992b148c1f65dfe104" kindref="member">lockType</ref>,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wallToken-&gt;<ref refid="struct_res_wolf_1_1___wall_token_1a3c532e48e75dd953c44750ed82ef3e8c" kindref="member">message</ref>,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>todo:<sp/>solid<sp/>tile<sp/>lookup<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-----<sp/>Entities<sp/>-----<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_res_wolf_1_1_level_1aa4d7025695de3d029b9ae12a70d0be33" kindref="member">totalEntities</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>entityTokenCursor<sp/>=<sp/>levelToken-&gt;<ref refid="struct_res_wolf_1_1___level_token_1af72e4b079e3776d0b3d1f0d61eb34794" kindref="member">entities</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>entities<sp/>=<sp/>(<ref refid="class_res_wolf_1_1_entity" kindref="compound">Entity</ref>**)calloc(<ref refid="class_res_wolf_1_1_level_1aa4d7025695de3d029b9ae12a70d0be33" kindref="member">totalEntities</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_res_wolf_1_1_entity" kindref="compound">Entity</ref>*));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entities<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_level_1a067c4f412449878e981163db9b526dab" kindref="member">status</ref><sp/>=<sp/>LevelStatus::FAILED_MEM;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_res_wolf_1_1_entity" kindref="compound">Entity</ref>**<sp/>cursor<sp/>=<sp/>entities;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_res_wolf_1_1_level_1aa4d7025695de3d029b9ae12a70d0be33" kindref="member">totalEntities</ref>;<sp/>i++,<sp/>cursor++,<sp/>entityTokenCursor++)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cursor<sp/>=<sp/>createEntity(</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityTokenCursor-&gt;entityId,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityTokenCursor-&gt;x,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityTokenCursor-&gt;y,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityTokenCursor-&gt;config</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_res_wolf_1_1_wall" kindref="compound">Wall</ref>*<sp/><ref refid="class_res_wolf_1_1_level_1a6f39e4e3b1228299dbd635b2c4ddb5d5" kindref="member">Level::wallAt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0<sp/>||<sp/>x<sp/>&gt;=<sp/><ref refid="class_res_wolf_1_1_level_1ae18e9382f9bf305c7577093a7a5d8447" kindref="member">width</ref><sp/>||<sp/>y<sp/>&lt;<sp/>0<sp/>||<sp/>y<sp/>&gt;=<sp/>height)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_res_wolf_1_1_level_1a981c7402c950e7bdde617386fef43f00" kindref="member">walls</ref><sp/>+<sp/>((y<sp/>*<sp/><ref refid="class_res_wolf_1_1_level_1ae18e9382f9bf305c7577093a7a5d8447" kindref="member">width</ref>)<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight></codeline>
    </programlisting>
    <location file="Level.cpp"/>
  </compounddef>
</doxygen>
